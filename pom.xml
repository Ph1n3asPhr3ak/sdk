<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>CityRisksBPM</groupId>
  <artifactId>CityRisksBPM</artifactId>
  <version>0.0.1</version>
<properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <eclipselink.version>2.5.1</eclipselink.version> -->
		<hibernate.version>5.1.2.Final</hibernate.version>
		<spring-data-jpa-version>1.10.4.RELEASE</spring-data-jpa-version>
		<org.springframework-version>4.2.8.RELEASE</org.springframework-version>
		<spring-data-rest.version>2.5.4.RELEASE</spring-data-rest.version>
	</properties>
	
	<!-- Module Test Dependencies/Repositories-->
	<repositories>
	<repository>
			<id>apache.snapshots</id>
			<name>Apache Development Snapshot Repository</name>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
		<id>OSGEO GeoTools repo</id>
		<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
<!-- 		<repository>
			<id>Hibernate Spatial repo</id>
			<url>http://www.hibernatespatial.org/repository</url>
		</repository>
 -->	</repositories>
	
	
	<!-- -->
   <dependencies>
   <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
 
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>postgresql</artifactId>
					<groupId>postgresql</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.3-1101-jdbc4</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- Do not use this, it breaks WADL generation, use jackson-databind instead -->		
		<!-- 		<dependency>
					<groupId>com.fasterxml.jackson.dataformat</groupId>
					<artifactId>jackson-dataformat-xml</artifactId>
					<version>2.5.1</version>
				</dependency> -->
		
		<!-- 	<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.5.1</version>
			</dependency>
		 -->		
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.6.1</version>
		</dependency>

<!--  -->

<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
<!-- 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.12</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa-version}</version>
			<scope>compile</scope>
		</dependency>

	<!-- 	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-core</artifactId>
			<version>${spring-data-rest.version}</version>
		</dependency>


		<!-- Java EE -->

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>eu.medsea.mimeutil</groupId>
			<artifactId>mime-util</artifactId>
			<version>2.1.3</version>
		</dependency>
<!-- CityRisks --> 
	<dependency>
         <groupId>eu.cityrisks</groupId>
         <artifactId>eu.cityrisks.services</artifactId>
         <scope>system</scope>
         <version>0.6</version>
         <systemPath>${basedir}\lib\cityrisks-services-0.6.jar</systemPath>
      </dependency>
      <dependency>
         <groupId>eu.cityrisks</groupId>
         <artifactId>eu.cityrisks.model</artifactId>
         <scope>system</scope>
         <version>0.6</version>
         <systemPath>${basedir}\lib\cityrisks-model-0.6.jar</systemPath>
      </dependency>
  	<dependency>
  		<groupId>org.activiti</groupId>
  		<artifactId>activiti-engine</artifactId>
  		<version>5.22.0</version>
  	</dependency>
  	<dependency>
  		<groupId>org.slf4j</groupId>
  		<artifactId>slf4j-api</artifactId>
  		<version>1.7.21</version>
  	</dependency>
  	<dependency>
  		<groupId>org.slf4j</groupId>
  		<artifactId>slf4j-log4j12</artifactId>
  		<version>1.7.21</version>
  	</dependency>
  	<!-- Before postgres -->
  	<dependency>
  		<groupId>com.h2database</groupId>
  		<artifactId>h2</artifactId>
  		<version>1.4.193</version>
  	</dependency> 
  </dependencies>
  <build>
  	<plugins>
  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <!-- get all project dependencies -->
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <!-- MainClass in mainfest make a executable jar -->
          <archive>
            <manifest>
              <mainClass>com.example.OnboardingRequest</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <!-- bind to the packaging phase -->
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>